{"version":3,"file":"index.cjs","sources":["../src/types.ts","../src/converters.ts","../src/validators.ts","../src/index.ts"],"sourcesContent":["import type { Signer, JWTVerified, JWTHeader, JWTOptions, JWTVerifyOptions } from 'did-jwt'\n\nexport const JWT_ALG = 'ES256K'\nexport const JWT_FORMAT = /^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$/\nexport const DEFAULT_CONTEXT = 'https://www.w3.org/2018/credentials/v1'\nexport const DEFAULT_VC_TYPE = 'VerifiableCredential'\nexport const DEFAULT_VP_TYPE = 'VerifiablePresentation'\n/**\n * The `JwtProof2020` is a synthetic proof type, usable for differentiating credentials by proof type when representing\n * JWT credentials as W3C VC JSON. It is not a registered W3C VC Data Model algorithm and should not be treated as\n * such.\n *\n * This proof type is only intended as a convenience and does not actually prove the validity of a VC/VP in JSON\n * representation. The actual verifiable credential or presentation is represented in the `jwt` property.\n */\nexport const DEFAULT_JWT_PROOF_TYPE = 'JwtProof2020'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type JwtCredentialSubject = Record<string, any>\n\nexport interface CredentialStatus {\n  id: string\n  type: string\n}\n\n/**\n * A JWT payload representation of a Credential\n * @see https://www.w3.org/TR/vc-data-model/#jwt-encoding\n */\nexport interface JwtCredentialPayload {\n  iss?: string\n  sub?: string\n  vc: Extensible<{\n    '@context': string[] | string\n    type: string[] | string\n    credentialSubject: JwtCredentialSubject\n    credentialStatus?: CredentialStatus\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evidence?: any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    termsOfUse?: any\n  }>\n  nbf?: number\n  aud?: string | string[]\n  exp?: number\n  jti?: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * A JWT payload representation of a Presentation\n * @see https://www.w3.org/TR/vc-data-model/#jwt-encoding\n */\nexport interface JwtPresentationPayload {\n  vp: Extensible<{\n    '@context': string[] | string\n    type: string[] | string\n    verifiableCredential?: VerifiableCredential[] | VerifiableCredential\n  }>\n  iss?: string\n  aud?: string | string[]\n  nbf?: number\n  exp?: number\n  jti?: string\n  nonce?: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport type IssuerType = Extensible<{ id: string }> | string\nexport type DateType = string | Date\n\n/**\n * Used as input when creating Verifiable Credentials\n */\ninterface FixedCredentialPayload {\n  '@context': string | string[]\n  id?: string\n  type: string | string[]\n  issuer: IssuerType\n  issuanceDate: DateType\n  expirationDate?: DateType\n  credentialSubject: Extensible<{\n    id?: string\n  }>\n  credentialStatus?: CredentialStatus\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  evidence?: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  termsOfUse?: any\n}\n\n/**\n * A more flexible representation of a {@link W3CCredential} that can be used as input to methods\n * that expect it.\n */\nexport type CredentialPayload = Extensible<FixedCredentialPayload>\n\n/**\n * This is meant to reflect unambiguous types for the properties in `CredentialPayload`\n */\ninterface NarrowCredentialDefinitions {\n  '@context': string[]\n  type: string[]\n  issuer: Exclude<IssuerType, string>\n  issuanceDate: string\n  expirationDate?: string\n}\n\n/**\n * Replaces the matching property types of T with the ones in U\n */\ntype Replace<T, U> = Omit<T, keyof U> & U\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Extensible<T> = T & { [x: string]: any }\n\n/**\n * This data type represents a parsed VerifiableCredential.\n * It is meant to be an unambiguous representation of the properties of a Credential and is usually the result of a\n * transformation method. See `transformCredentialInput()` for more details.\n *\n * `issuer` is always an object with an `id` property and potentially other app specific issuer claims\n * `issuanceDate` is an ISO DateTime string\n * `expirationDate`, is a nullable ISO DateTime string\n *\n * Any JWT specific properties are transformed to the broader W3C variant and any app specific properties are left\n * intact\n */\nexport type W3CCredential = Extensible<Replace<FixedCredentialPayload, NarrowCredentialDefinitions>>\n\n/**\n * used as input when creating Verifiable Presentations\n */\nexport interface FixedPresentationPayload {\n  '@context': string | string[]\n  type: string | string[]\n  id?: string\n  verifiableCredential?: VerifiableCredential[]\n  holder: string\n  verifier?: string | string[]\n  issuanceDate?: string\n  expirationDate?: string\n}\n\n/**\n * A more flexible representation of a {@link W3CPresentation} that can be used as input to methods\n * that expect it.\n */\nexport type PresentationPayload = Extensible<FixedPresentationPayload>\n\ninterface NarrowPresentationDefinitions {\n  '@context': string[]\n  type: string[]\n  verifier: string[]\n  verifiableCredential?: Verifiable<W3CCredential>[]\n}\n\n/**\n * This data type represents a parsed Presentation payload.\n * It is meant to be an unambiguous representation of the properties of a Presentation and is usually the result of a\n * transformation method. See `transformPresentationInput()` for more details.\n *\n * The `verifiableCredential` array should contain parsed `Verifiable<Credential>` elements.\n * Any JWT specific properties are transformed to the broader W3C variant and any other app specific properties are\n * left intact.\n */\nexport type W3CPresentation = Extensible<Replace<FixedPresentationPayload, NarrowPresentationDefinitions>>\n\nexport interface Proof {\n  type?: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * Represents a readonly representation of a verifiable object, including the {@link Proof}\n * property that can be used to verify it.\n */\nexport type Verifiable<T> = Readonly<T> & { readonly proof: Proof }\nexport type JWT = string\n\n/**\n * A union type for both possible representations of a Credential (JWT and W3C standard)\n *\n * @see https://www.w3.org/TR/vc-data-model/#proof-formats\n */\nexport type VerifiableCredential = JWT | Verifiable<W3CCredential>\n\n/**\n * A union type for both possible representations of a Presentation (JWT and W3C standard)\n *\n * @see https://www.w3.org/TR/vc-data-model/#proof-formats\n */\nexport type VerifiablePresentation = JWT | Verifiable<W3CPresentation>\n\nexport type VerifiedJWT = JWTVerified\n\n/**\n * Represents the result of a Presentation verification.\n * It includes the properties produced by `did-jwt` and a W3C compliant representation of\n * the Presentation that was just verified.\n *\n * This is usually the result of a verification method and not meant to be created by generic code.\n */\nexport type VerifiedPresentation = VerifiedJWT & {\n  verifiablePresentation: Verifiable<W3CPresentation>\n}\n\n/**\n * Represents the result of a Credential verification.\n * It includes the properties produced by `did-jwt` and a W3C compliant representation of\n * the Credential that was just verified.\n *\n * This is usually the result of a verification method and not meant to be created by generic code.\n */\nexport type VerifiedCredential = VerifiedJWT & {\n  verifiableCredential: Verifiable<W3CCredential>\n}\n\n/**\n * Represents a tuple of a DID-URL with a `Signer` and associated algorithm.\n */\nexport interface Issuer {\n  did: string\n  signer: Signer\n  alg?: string\n}\n\n/**\n * Represents the Creation Options that can be passed to the createVerifiableCredentialJwt method.\n */\nexport interface CreateCredentialOptions extends Partial<JWTOptions> {\n  /**\n   * Determines whether the JSON->JWT transformation will remove the original fields from the input payload.\n   * See https://www.w3.org/TR/vc-data-model/#jwt-encoding\n   *\n   * @default true\n   */\n  removeOriginalFields?: boolean\n\n  /**\n   * Allows including or overriding some header parameters for the resulting JWT.\n   * If the issuer or holder does not list an `alg`, then the one specified in `header` will be used\n   */\n  header?: Partial<JWTHeader>\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * Represents the Verification Options that can be passed to the verifyCredential method.\n * These options are forwarded to the lower level verification code\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface VerifyCredentialOptions extends JWTVerifyOptions {\n  /**\n   * When transforming the result of the verification into a W3C VerifiableCredential, this property dictates whether\n   * the JWT specific properties are removed from the payload or not. Defaults to `true`.\n   */\n  removeOriginalFields?: boolean\n\n  /**\n   * Use this to override the default checks performed during verification\n   */\n  policies?: VerifyCredentialPolicies\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport interface VerifyCredentialPolicies {\n  // tweak the time at which the credential should be valid (UNIX timestamp, in seconds)\n  now?: number\n  // when false skips issuanceDate check\n  issuanceDate?: boolean\n  // when false skips expirationDate check\n  expirationDate?: boolean\n  // when false skips format checks\n  format?: boolean\n\n  /**\n   * Other policies are forwarded to lower level libs\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * Represents the Verification Options that can be passed to the verifyPresentation method.\n * The verification will fail if given options are NOT satisfied.\n */\nexport interface VerifyPresentationOptions extends VerifyCredentialOptions {\n  domain?: string\n  challenge?: string\n}\n\n/**\n * Represents the Creation Options that can be passed to the createVerifiablePresentationJwt method.\n */\nexport interface CreatePresentationOptions extends CreateCredentialOptions {\n  domain?: string\n  challenge?: string\n}\n","import {\n  VerifiableCredential,\n  JWT,\n  JwtPresentationPayload,\n  JwtCredentialPayload,\n  JWT_FORMAT,\n  DEFAULT_JWT_PROOF_TYPE,\n  DEFAULT_CONTEXT,\n  DEFAULT_VC_TYPE,\n  CredentialPayload,\n  W3CCredential,\n  Verifiable,\n  PresentationPayload,\n  W3CPresentation,\n} from './types'\nimport { decodeJWT } from 'did-jwt'\n\n/**\n * Additional W3C VC fields:\n * These are defined as optional top-level properties in the W3C spec but are not mapped to top-level JWT names,\n * so they should be moved inside the \"vc\" object when transforming to a JWT.\n * Conversely, they should be moved out of the \"vc\" object when transforming from a JWT to W3C JSON.\n */\nconst additionalPropNames = ['evidence', 'termsOfUse', 'refreshService', 'credentialSchema', 'credentialStatus']\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function asArray(arg: any | any[]): any[] {\n  return Array.isArray(arg) ? arg : [arg]\n}\n\nfunction deepCopy<T>(source: T): T {\n  return Array.isArray(source)\n    ? source.map((item) => deepCopy(item))\n    : source instanceof Date\n    ? new Date(source.getTime())\n    : source && typeof source === 'object'\n    ? Object.getOwnPropertyNames(source).reduce(\n        (o, prop) => {\n          Object.defineProperty(\n            o,\n            prop,\n            Object.getOwnPropertyDescriptor(source, prop) as NonNullable<PropertyDescriptor>\n          )\n          o[prop] = deepCopy(source[prop as keyof T])\n          return o\n        },\n        Object.create(Object.getPrototypeOf(source))\n      )\n    : (source as T)\n}\n\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n  return value !== null && value !== undefined\n}\n\nfunction cleanUndefined<T>(input: T): T {\n  if (typeof input !== 'object' || input === null) {\n    return input\n  }\n  const obj = { ...input }\n  Object.keys(obj).forEach((key) => obj[key as keyof T] === undefined && delete obj[key as keyof T])\n  return obj\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isLegacyAttestationFormat(payload: Record<string, any>): boolean {\n  // payload is an object and has all the required fields of old attestation format\n  return typeof payload === 'object' && payload.sub && payload.iss && payload.claim && payload.iat\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function attestationToVcFormat(payload: Record<string, any>): JwtCredentialPayload {\n  const { iat, nbf, claim, vc, ...rest } = payload\n  const result: JwtCredentialPayload = {\n    ...rest,\n    nbf: nbf ? nbf : iat,\n    vc: {\n      '@context': [DEFAULT_CONTEXT],\n      type: [DEFAULT_VC_TYPE],\n      credentialSubject: claim,\n    },\n  }\n  if (vc) payload.issVc = vc\n  return result\n}\n\nfunction normalizeJwtCredentialPayload(\n  input: Partial<JwtCredentialPayload>,\n  removeOriginalFields = true\n): W3CCredential {\n  let result: Partial<CredentialPayload> = deepCopy(input)\n\n  if (isLegacyAttestationFormat(input)) {\n    result = attestationToVcFormat(input)\n  }\n\n  // FIXME: handle case when credentialSubject(s) are not object types\n  result.credentialSubject = { ...input.credentialSubject, ...input.vc?.credentialSubject }\n  if (input.sub && !input.credentialSubject?.id && result.credentialSubject) {\n    result.credentialSubject.id = input.sub\n    if (removeOriginalFields) {\n      delete result.sub\n    }\n  }\n  if (removeOriginalFields) {\n    delete result.vc?.credentialSubject\n  }\n\n  if (typeof input.issuer === 'undefined' || typeof input.issuer === 'object') {\n    result.issuer = cleanUndefined({ id: input.iss, ...input.issuer })\n    if (removeOriginalFields && !input.issuer?.id) {\n      delete result.iss\n    }\n  }\n\n  if (!input.id && input.jti) {\n    result.id = result.id || result.jti\n    if (removeOriginalFields) {\n      delete result.jti\n    }\n  }\n\n  const types = [...asArray(result.type), ...asArray(result.vc?.type)].filter(notEmpty)\n  result.type = [...new Set(types)]\n  if (removeOriginalFields) {\n    delete result.vc?.type\n  }\n\n  for (const prop of additionalPropNames) {\n    if (input.vc && input.vc[prop]) {\n      if (!result[prop]) {\n        result[prop] = input.vc[prop]\n      }\n      if (removeOriginalFields) {\n        delete result.vc[prop]\n      }\n    }\n  }\n\n  const contextArray: string[] = [\n    ...asArray(input.context),\n    ...asArray(input['@context']),\n    ...asArray(input.vc?.['@context']),\n  ].filter(notEmpty)\n  result['@context'] = [...new Set(contextArray)]\n  if (removeOriginalFields) {\n    delete result.context\n    delete result.vc?.['@context']\n  }\n\n  if (!input.issuanceDate && (input.iat || input.nbf)) {\n    result.issuanceDate = new Date((input.nbf || input.iat) * 1000).toISOString()\n    if (removeOriginalFields) {\n      if (input.nbf) {\n        delete result.nbf\n      } else {\n        delete result.iat\n      }\n    }\n  }\n\n  if (!input.expirationDate && input.exp) {\n    result.expirationDate = new Date(input.exp * 1000).toISOString()\n    if (removeOriginalFields) {\n      delete result.exp\n    }\n  }\n\n  if (removeOriginalFields) {\n    if (result.vc && Object.keys(result.vc).length === 0) {\n      delete result.vc\n    }\n  }\n\n  // FIXME: interpret `aud` property as `verifier`\n\n  return result as W3CCredential\n}\n\nfunction normalizeJwtCredential(input: JWT, removeOriginalFields = true): Verifiable<W3CCredential> {\n  let decoded\n  try {\n    decoded = decodeJWT(input)\n  } catch (e) {\n    throw new TypeError('unknown credential format')\n  }\n  return {\n    ...normalizeJwtCredentialPayload(decoded.payload, removeOriginalFields),\n    proof: {\n      type: DEFAULT_JWT_PROOF_TYPE,\n      jwt: input,\n    },\n  }\n}\n\n/**\n * Normalizes a credential payload into an unambiguous W3C credential data type In case of conflict, existing W3C\n * Credential specific properties take precedence, except for arrays and object types which get merged.\n *\n * @param input - either a JWT or JWT payload, or a VerifiableCredential\n * @param removeOriginalFields - if true, removes all fields that were transformed according to the W3C mapping\n *\n * @see {@link https://www.w3.org/TR/vc-data-model/#jwt-encoding | VC JWT encoding }\n */\nexport function normalizeCredential(\n  input: Partial<VerifiableCredential> | Partial<JwtCredentialPayload>,\n  removeOriginalFields = true\n): Verifiable<W3CCredential> {\n  if (typeof input === 'string') {\n    if (JWT_FORMAT.test(input)) {\n      return normalizeJwtCredential(input, removeOriginalFields)\n    } else {\n      let parsed: Record<string, unknown>\n      try {\n        parsed = JSON.parse(input)\n      } catch (e) {\n        throw new TypeError('unknown credential format')\n      }\n      return normalizeCredential(parsed, removeOriginalFields)\n    }\n  } else if (input.proof?.jwt) {\n    // TODO: test that it correctly propagates app specific proof properties\n    return deepCopy({ ...normalizeJwtCredential(input.proof.jwt, removeOriginalFields), proof: input.proof })\n  } else {\n    // TODO: test that it accepts JWT payload, CredentialPayload, VerifiableCredential\n    // TODO: test that it correctly propagates proof, if any\n    return { proof: {}, ...normalizeJwtCredentialPayload(input, removeOriginalFields) }\n  }\n}\n\n/**\n * type used to signal a very loose input is accepted\n */\ntype DeepPartial<T> = T extends Record<string, unknown> ? { [K in keyof T]?: DeepPartial<T[K]> } : T\n\n/**\n * Transforms a W3C Credential payload into a JWT compatible encoding.\n * The method accepts app specific fields and in case of collision, existing JWT properties will take precedence.\n * Also, `nbf`, `exp` and `jti` properties can be explicitly set to `undefined` and they will be kept intact.\n * @param input - either a JWT payload or a CredentialPayloadInput\n * @param removeOriginalFields - if true, removes original W3C fields from the resulting object\n *\n * @see {@link https://www.w3.org/TR/vc-data-model/#jwt-encoding | VC JWT encoding }\n */\nexport function transformCredentialInput(\n  input: Partial<CredentialPayload> | DeepPartial<JwtCredentialPayload>,\n  removeOriginalFields = true\n): JwtCredentialPayload {\n  if (Array.isArray(input.credentialSubject)) throw Error('credentialSubject of type array not supported')\n\n  const result: Partial<JwtCredentialPayload> = deepCopy({\n    vc: { ...input.vc },\n    ...input,\n  }) as Partial<JwtCredentialPayload>\n  result.vc = result.vc as NonNullable<typeof result.vc>\n\n  const credentialSubject = { ...input.credentialSubject, ...input.vc?.credentialSubject }\n  if (!input.sub) {\n    result.sub = input.credentialSubject?.id\n    if (removeOriginalFields) {\n      delete credentialSubject.id\n    }\n  }\n\n  const contextEntries = [\n    ...asArray(input.context),\n    ...asArray(input['@context']),\n    ...asArray(input.vc?.['@context']),\n  ].filter(notEmpty)\n  result.vc['@context'] = [...new Set(contextEntries)]\n  if (removeOriginalFields) {\n    delete result.context\n    delete result['@context']\n  }\n\n  const types = [...asArray(input.type), ...asArray(input.vc?.type)].filter(notEmpty)\n  result.vc.type = [...new Set(types)]\n  if (removeOriginalFields) {\n    delete result.type\n  }\n\n  if (input.id && Object.getOwnPropertyNames(input).indexOf('jti') === -1) {\n    result.jti = input.id\n    if (removeOriginalFields) {\n      delete result.id\n    }\n  }\n\n  if (input.issuanceDate && Object.getOwnPropertyNames(input).indexOf('nbf') === -1) {\n    const converted = Date.parse(input.issuanceDate)\n    if (!isNaN(converted)) {\n      result.nbf = Math.floor(converted / 1000)\n      if (removeOriginalFields) {\n        delete result.issuanceDate\n      }\n    }\n  }\n\n  if (input.expirationDate && Object.getOwnPropertyNames(input).indexOf('exp') === -1) {\n    const converted = Date.parse(input.expirationDate)\n    if (!isNaN(converted)) {\n      result.exp = Math.floor(converted / 1000)\n      if (removeOriginalFields) {\n        delete result.expirationDate\n      }\n    }\n  }\n\n  if (input.issuer && Object.getOwnPropertyNames(input).indexOf('iss') === -1) {\n    if (typeof input.issuer === 'object') {\n      result.iss = input.issuer?.id\n      if (removeOriginalFields) {\n        delete result.issuer.id\n        if (Object.keys(result.issuer).length === 0) {\n          delete result.issuer\n        }\n      }\n    } else if (typeof input.issuer === 'string') {\n      result.iss = input.iss || '' + input.issuer\n      if (removeOriginalFields) {\n        delete result.issuer\n      }\n    } else {\n      // nop\n    }\n  }\n\n  result.vc.credentialSubject = credentialSubject\n  if (removeOriginalFields) {\n    delete result.credentialSubject\n  }\n\n  for (const prop of additionalPropNames) {\n    if (input[prop]) {\n      if (!result.vc[prop]) {\n        result.vc[prop] = input[prop]\n      }\n      if (removeOriginalFields) {\n        delete result[prop]\n      }\n    }\n  }\n\n  return result as JwtCredentialPayload\n}\n\nfunction normalizeJwtPresentationPayload(\n  input: DeepPartial<JwtPresentationPayload>,\n  removeOriginalFields = true\n): W3CPresentation {\n  const result: Partial<PresentationPayload> = deepCopy(input)\n\n  result.verifiableCredential = [\n    ...asArray(input.verifiableCredential),\n    ...asArray(input.vp?.verifiableCredential),\n  ].filter(notEmpty)\n  result.verifiableCredential = result.verifiableCredential.map((cred) => {\n    return normalizeCredential(cred, removeOriginalFields)\n  })\n  if (removeOriginalFields) {\n    delete result.vp?.verifiableCredential\n  }\n\n  if (input.iss && !input.holder) {\n    result.holder = input.iss\n    if (removeOriginalFields) {\n      delete result.iss\n    }\n  }\n\n  if (input.aud) {\n    result.verifier = [...asArray(input.verifier), ...asArray(input.aud)].filter(notEmpty)\n    result.verifier = [...new Set(result.verifier)]\n    if (removeOriginalFields) {\n      delete result.aud\n    }\n  }\n\n  if (input.jti && Object.getOwnPropertyNames(input).indexOf('id') === -1) {\n    result.id = input.id || input.jti\n    if (removeOriginalFields) {\n      delete result.jti\n    }\n  }\n\n  const types = [...asArray(input.type), ...asArray(input.vp?.type)].filter(notEmpty)\n  result.type = [...new Set(types)]\n  if (removeOriginalFields) {\n    delete result.vp?.type\n  }\n\n  const contexts = [\n    ...asArray(input.context),\n    ...asArray(input['@context']),\n    ...asArray(input.vp?.['@context']),\n  ].filter(notEmpty)\n  result['@context'] = [...new Set(contexts)]\n  if (removeOriginalFields) {\n    delete result.context\n    delete result.vp?.['@context']\n  }\n\n  if (!input.issuanceDate && (input.iat || input.nbf)) {\n    result.issuanceDate = new Date((input.nbf || input.iat) * 1000).toISOString()\n    if (removeOriginalFields) {\n      if (input.nbf) {\n        delete result.nbf\n      } else {\n        delete result.iat\n      }\n    }\n  }\n\n  if (!input.expirationDate && input.exp) {\n    result.expirationDate = new Date(input.exp * 1000).toISOString()\n    if (removeOriginalFields) {\n      delete result.exp\n    }\n  }\n\n  if (result.vp && Object.keys(result.vp).length === 0) {\n    if (removeOriginalFields) {\n      delete result.vp\n    }\n  }\n\n  return result as W3CPresentation\n}\n\nfunction normalizeJwtPresentation(input: JWT, removeOriginalFields = true): Verifiable<W3CPresentation> {\n  let decoded\n  try {\n    decoded = decodeJWT(input)\n  } catch (e) {\n    throw new TypeError('unknown presentation format')\n  }\n  return {\n    ...normalizeJwtPresentationPayload(decoded.payload, removeOriginalFields),\n    proof: {\n      type: DEFAULT_JWT_PROOF_TYPE,\n      jwt: input,\n    },\n  }\n}\n\n/**\n * Normalizes a presentation payload into an unambiguous W3C Presentation data type.\n *\n * @see {@link https://www.w3.org/TR/vc-data-model/#jwt-encoding | VP JWT encoding }\n *\n * @param input - either a JWT or JWT payload, or a VerifiablePresentation\n * @param removeOriginalFields - if true, removes all fields that were transformed according to the W3C mapping\n */\nexport function normalizePresentation(\n  input: Partial<PresentationPayload> | DeepPartial<JwtPresentationPayload> | JWT,\n  removeOriginalFields = true\n): Verifiable<W3CPresentation> {\n  if (typeof input === 'string') {\n    if (JWT_FORMAT.test(input)) {\n      return normalizeJwtPresentation(input, removeOriginalFields)\n    } else {\n      let parsed: Record<string, unknown>\n      try {\n        parsed = JSON.parse(input)\n      } catch (e) {\n        throw new TypeError('unknown presentation format')\n      }\n      return normalizePresentation(parsed, removeOriginalFields)\n    }\n  } else if (input.proof?.jwt) {\n    // TODO: test that it correctly propagates app specific proof properties\n    return { ...normalizeJwtPresentation(input.proof.jwt, removeOriginalFields), proof: input.proof }\n  } else {\n    // TODO: test that it accepts JWT payload, PresentationPayload, VerifiablePresentation\n    // TODO: test that it correctly propagates proof, if any\n    return { proof: {}, ...normalizeJwtPresentationPayload(input, removeOriginalFields) }\n  }\n}\n\n/**\n * Transforms a W3C Presentation payload into a JWT compatible encoding.\n * The method accepts app specific fields and in case of collision, existing JWT properties will take precedence.\n * Also, `nbf`, `exp` and `jti` properties can be explicitly set to `undefined` and they will be kept intact.\n * @param input - either a JWT payload or a CredentialPayloadInput\n * @param removeOriginalFields - when true, removes the original W3C fields from the resulting object\n *\n * @see {@link https://www.w3.org/TR/vc-data-model/#jwt-encoding | VP JWT encoding }\n */\nexport function transformPresentationInput(\n  input: Partial<PresentationPayload> | DeepPartial<JwtPresentationPayload>,\n  removeOriginalFields = true\n): JwtPresentationPayload {\n  const result: Partial<JwtPresentationPayload> = deepCopy({\n    vp: { ...input.vp },\n    ...input,\n  }) as Partial<JwtPresentationPayload>\n  result.vp = result.vp as NonNullable<typeof result.vp>\n\n  const contextEntries = [\n    ...asArray(input.context),\n    ...asArray(input['@context']),\n    ...asArray(input.vp?.['@context']),\n  ].filter(notEmpty)\n  result.vp['@context'] = [...new Set(contextEntries)]\n  if (removeOriginalFields) {\n    delete result.context\n    delete result['@context']\n  }\n\n  const types = [...asArray(input.type), ...asArray(input.vp?.type)].filter(notEmpty)\n  result.vp.type = [...new Set(types)]\n  if (removeOriginalFields) {\n    delete result.type\n  }\n\n  if (input.id && Object.getOwnPropertyNames(input).indexOf('jti') === -1) {\n    result.jti = input.id\n    if (removeOriginalFields) {\n      delete result.id\n    }\n  }\n\n  if (input.issuanceDate && Object.getOwnPropertyNames(input).indexOf('nbf') === -1) {\n    const converted = Date.parse(input.issuanceDate)\n    if (!isNaN(converted)) {\n      result.nbf = Math.floor(converted / 1000)\n      if (removeOriginalFields) {\n        delete result.issuanceDate\n      }\n    }\n  }\n\n  if (input.expirationDate && Object.getOwnPropertyNames(input).indexOf('exp') === -1) {\n    const converted = Date.parse(input.expirationDate)\n    if (!isNaN(converted)) {\n      result.exp = Math.floor(converted / 1000)\n      if (removeOriginalFields) {\n        delete result.expirationDate\n      }\n    }\n  }\n\n  if (result.verifiableCredential || result.vp?.verifiableCredential) {\n    result.vp.verifiableCredential = [\n      ...asArray(result.verifiableCredential),\n      ...asArray(result.vp?.verifiableCredential),\n    ]\n      .filter(notEmpty)\n      .map((credential: VerifiableCredential) => {\n        if (typeof credential === 'object' && credential.proof?.jwt) {\n          return credential.proof.jwt\n        } else {\n          return credential\n        }\n      })\n  }\n\n  if (removeOriginalFields) {\n    delete result.verifiableCredential\n  }\n\n  if (input.holder && Object.getOwnPropertyNames(input).indexOf('iss') === -1) {\n    if (typeof input.holder === 'string') {\n      result.iss = input.holder\n      if (removeOriginalFields) {\n        delete result.holder\n      }\n    } else {\n      // nop\n    }\n  }\n\n  if (input.verifier) {\n    const audience = [...asArray(input.verifier), ...asArray(input.aud)].filter(notEmpty)\n    result.aud = [...new Set(audience)]\n    if (removeOriginalFields) {\n      delete result.verifier\n    }\n  }\n\n  return result as JwtPresentationPayload\n}\n","import { DEFAULT_CONTEXT, DEFAULT_VC_TYPE, DEFAULT_VP_TYPE, JWT_FORMAT } from './types'\nimport { JwtCredentialSubject, DateType } from './types'\nimport { VerifiableCredential } from '.'\nimport { asArray } from './converters'\nimport { JWT_ERROR } from 'did-jwt'\n\n/**\n * Error prefixes used for known verification failure cases related to the\n * {@link https://www.w3.org/TR/vc-data-model/ | Verifiable Credential data model }\n */\nexport const VC_ERROR = {\n  /**\n   * Thrown when the credential or presentation being verified does not conform to the data model defined by\n   * {@link https://www.w3.org/TR/vc-data-model/ | the spec}\n   */\n  SCHEMA_ERROR: 'schema_error',\n\n  /**\n   * Thrown when the input is not a JWT string\n   */\n  FORMAT_ERROR: 'format_error',\n\n  /**\n   * Thrown when verifying a presentation where `challenge` and/or `domain` don't match the expected values.\n   */\n  AUTH_ERROR: 'auth_error',\n}\n\n/**\n * Known validation or verification error prefixes.\n */\nexport const VC_JWT_ERROR = { ...VC_ERROR, ...JWT_ERROR }\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isDateObject(input: any): input is Date {\n  return input && !isNaN(input) && Object.prototype.toString.call(input) === '[object Date]'\n}\n\nexport function validateJwtFormat(value: VerifiableCredential): void {\n  if (typeof value === 'string' && !value.match(JWT_FORMAT)) {\n    throw new TypeError(`${VC_ERROR.FORMAT_ERROR}: \"${value}\" is not a valid JWT format`)\n  }\n}\n\n// The main scenario we want to guard against is having a timestamp in milliseconds\n// instead of seconds (ex: from new Date().getTime()).\n// We will check the number of digits and assume that any number with 12 or more\n// digits is a millisecond timestamp.\n// 10 digits max is 9999999999 -> 11/20/2286 @ 5:46pm (UTC)\n// 11 digits max is 99999999999 -> 11/16/5138 @ 9:46am (UTC)\n// 12 digits max is 999999999999 -> 09/27/33658 @ 1:46am (UTC)\nexport function validateTimestamp(value: number | DateType): void {\n  if (typeof value === 'number') {\n    if (!(Number.isInteger(value) && value < 100000000000)) {\n      throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: \"${value}\" is not a unix timestamp in seconds`)\n    }\n  } else if (typeof value === 'string') {\n    validateTimestamp(Math.floor(new Date(value).valueOf() / 1000))\n  } else if (!isDateObject(value)) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: \"${value}\" is not a valid time`)\n  }\n}\n\nexport function validateContext(value: string | string[]): void {\n  const input = asArray(value)\n  if (input.length < 1 || input.indexOf(DEFAULT_CONTEXT) === -1) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: @context is missing default context \"${DEFAULT_CONTEXT}\"`)\n  }\n}\n\nexport function validateVcType(value: string | string[]): void {\n  const input = asArray(value)\n  if (input.length < 1 || input.indexOf(DEFAULT_VC_TYPE) === -1) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: type is missing default \"${DEFAULT_VC_TYPE}\"`)\n  }\n}\n\nexport function validateVpType(value: string | string[]): void {\n  const input = asArray(value)\n  if (input.length < 1 || input.indexOf(DEFAULT_VP_TYPE) === -1) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: type is missing default \"${DEFAULT_VP_TYPE}\"`)\n  }\n}\n\nexport function validateCredentialSubject(value: JwtCredentialSubject): void {\n  if (Object.keys(value).length === 0) {\n    throw new TypeError(`${VC_ERROR.SCHEMA_ERROR}: credentialSubject must not be empty`)\n  }\n}\n","import { createJWT, createMultisignatureJWT, verifyJWT } from 'did-jwt'\nimport type { Resolvable } from 'did-resolver'\nimport * as validators from './validators.js'\nimport { VC_ERROR } from './validators.js'\nimport type {\n  CreateCredentialOptions,\n  CreatePresentationOptions,\n  CredentialPayload,\n  Issuer,\n  JWT,\n  JwtCredentialPayload,\n  JwtPresentationPayload,\n  PresentationPayload,\n  Verifiable,\n  VerifiableCredential,\n  VerifiablePresentation,\n  VerifiedCredential,\n  VerifiedPresentation,\n  VerifyCredentialOptions,\n  VerifyCredentialPolicies,\n  VerifyPresentationOptions,\n  W3CCredential,\n  W3CPresentation,\n} from './types.js'\nimport { JWT_ALG } from './types.js'\nimport {\n  asArray,\n  normalizeCredential,\n  normalizePresentation,\n  notEmpty,\n  transformCredentialInput,\n  transformPresentationInput,\n} from './converters.js'\n\nexport { VC_ERROR, VC_JWT_ERROR } from './validators.js'\n\nexport type {\n  Issuer,\n  CredentialPayload,\n  PresentationPayload,\n  JwtCredentialPayload,\n  JwtPresentationPayload,\n  VerifiableCredential,\n  VerifiablePresentation,\n  VerifiedCredential,\n  VerifiedPresentation,\n  Verifiable,\n  W3CCredential,\n  W3CPresentation,\n  CreateCredentialOptions,\n  CreatePresentationOptions,\n  VerifyCredentialOptions,\n  VerifyCredentialPolicies,\n  VerifyPresentationOptions,\n}\n\nexport { transformCredentialInput, transformPresentationInput, normalizeCredential, normalizePresentation }\n\n/**\n * Creates a VerifiableCredential given a `CredentialPayload` or `JwtCredentialPayload` and an `Issuer`.\n *\n * This method transforms the payload into the [JWT encoding](https://www.w3.org/TR/vc-data-model/#jwt-encoding)\n * described in the [W3C VC spec](https://www.w3.org/TR/vc-data-model) and then validated to conform to the minimum\n * spec\n * required spec.\n *\n * The `issuer` is then used to assign an algorithm, override the `iss` field of the payload and then sign the JWT.\n *\n * @param payload - `CredentialPayload` or `JwtCredentialPayload`\n * @param issuer - `Issuer` the DID, signer and algorithm that will sign the token\n * @param options - Use these options to tweak the creation of the JWT Credential. These are forwarded to did-jwt.\n * @return a `Promise` that resolves to the JWT encoded verifiable credential or rejects with `TypeError` if the\n * `payload` is not W3C compliant\n */\nexport async function createVerifiableCredentialJwt(\n  payload: JwtCredentialPayload | CredentialPayload,\n  issuer: Issuer | Issuer[],\n  options: CreateCredentialOptions = {}\n): Promise<JWT> {\n  const parsedPayload: JwtCredentialPayload = {\n    iat: undefined,\n    ...transformCredentialInput(payload, options.removeOriginalFields),\n  }\n  validateJwtCredentialPayload(parsedPayload)\n\n  if (!Array.isArray(issuer)) {\n    return createJWT(\n      parsedPayload,\n      {\n        ...options,\n        issuer: issuer.did || parsedPayload.iss || '',\n        signer: issuer.signer,\n      },\n      {\n        ...options.header,\n        alg: issuer.alg || options.header?.alg || JWT_ALG,\n      }\n    )\n  } else {\n    const did = issuer[0].did\n    const issuers = []\n    for (const iss of issuer) {\n      if (iss.did !== did) {\n        throw new Error('All issuers must be the same did to comply with the Verifiable Conditions spec')\n      }\n      issuers.push({\n        issuer: iss.did || parsedPayload.iss || '',\n        signer: iss.signer,\n        alg: iss.alg || options.header?.alg || JWT_ALG,\n      })\n    }\n\n    return createMultisignatureJWT(parsedPayload, { ...options }, issuers)\n  }\n}\n\n/**\n * Creates a VerifiablePresentation JWT given a `PresentationPayload` or `JwtPresentationPayload` and an `Issuer`.\n *\n * This method transforms the payload into the [JWT encoding](https://www.w3.org/TR/vc-data-model/#jwt-encoding)\n * described in the [W3C VC spec](https://www.w3.org/TR/vc-data-model) and then validated to conform to the minimum\n * spec\n * required spec.\n *\n * The `holder` is then used to assign an algorithm, override the `iss` field of the payload and then sign the JWT.\n *\n * @param payload - `PresentationPayload` or `JwtPresentationPayload`\n * @param holder - `Issuer` of the Presentation JWT (holder of the VC), signer and algorithm that will sign the token\n * @param options - `CreatePresentationOptions` allows to pass additional values to the resulting JWT payload. These\n *   options are forwarded to did-jwt.\n * @return a `Promise` that resolves to the JWT encoded verifiable presentation or rejects with `TypeError` if the\n * `payload` is not W3C compliant\n */\nexport async function createVerifiablePresentationJwt(\n  payload: JwtPresentationPayload | PresentationPayload,\n  holder: Issuer,\n  options: CreatePresentationOptions = {}\n): Promise<JWT> {\n  const parsedPayload: JwtPresentationPayload = {\n    iat: undefined,\n    ...transformPresentationInput(payload, options?.removeOriginalFields),\n  }\n\n  // add challenge to nonce\n  if (options.challenge && Object.getOwnPropertyNames(parsedPayload).indexOf('nonce') === -1) {\n    parsedPayload.nonce = options.challenge\n  }\n\n  // add domain to audience.\n  if (options.domain) {\n    const audience = [...asArray(options.domain), ...asArray(parsedPayload.aud)].filter(notEmpty)\n    parsedPayload.aud = [...new Set(audience)]\n  }\n\n  validateJwtPresentationPayload(parsedPayload)\n  return createJWT(\n    parsedPayload,\n    {\n      ...options,\n      issuer: holder.did || parsedPayload.iss || '',\n      signer: holder.signer,\n    },\n    {\n      ...options.header,\n      alg: holder.alg || options.header?.alg || JWT_ALG,\n    }\n  )\n}\n\nexport function validateJwtCredentialPayload(payload: JwtCredentialPayload): void {\n  validators.validateContext(payload.vc['@context'])\n  validators.validateVcType(payload.vc.type)\n  validators.validateCredentialSubject(payload.vc.credentialSubject)\n  if (payload.nbf) validators.validateTimestamp(payload.nbf)\n  if (payload.exp) validators.validateTimestamp(payload.exp)\n}\n\nexport function validateCredentialPayload(payload: CredentialPayload): void {\n  validators.validateContext(payload['@context'])\n  validators.validateVcType(payload.type)\n  validators.validateCredentialSubject(payload.credentialSubject)\n  if (payload.issuanceDate) validators.validateTimestamp(payload.issuanceDate)\n  if (payload.expirationDate) validators.validateTimestamp(payload.expirationDate)\n}\n\nexport function validateJwtPresentationPayload(payload: JwtPresentationPayload): void {\n  validators.validateContext(payload.vp['@context'])\n  validators.validateVpType(payload.vp.type)\n  // empty credential array is allowed\n  if (payload.vp.verifiableCredential && payload.vp.verifiableCredential.length >= 1) {\n    for (const vc of asArray(payload.vp.verifiableCredential)) {\n      if (typeof vc === 'string') {\n        validators.validateJwtFormat(vc)\n      } else {\n        validateCredentialPayload(vc)\n      }\n    }\n  }\n  if (payload.exp) validators.validateTimestamp(payload.exp)\n}\n\nexport function validatePresentationPayload(payload: PresentationPayload): void {\n  validators.validateContext(payload['@context'])\n  validators.validateVpType(payload.type)\n  // empty credential array is allowed\n  if (payload.verifiableCredential && payload.verifiableCredential.length >= 1) {\n    for (const vc of payload.verifiableCredential) {\n      if (typeof vc === 'string') {\n        validators.validateJwtFormat(vc)\n      } else {\n        validateCredentialPayload(vc)\n      }\n    }\n  }\n  if (payload.expirationDate) validators.validateTimestamp(payload.expirationDate)\n}\n\n/**\n * Verifies and validates a VerifiableCredential that is encoded as a JWT according to the W3C spec.\n *\n * @return a `Promise` that resolves to a `VerifiedCredential` or rejects with `TypeError` if the input is not\n * W3C compliant\n * @param vc - the credential to be verified. Currently only the JWT encoding is supported by this library\n * @param resolver - a configured `Resolver` (or an implementation of `Resolvable`) that can provide the DID document\n *   of the JWT issuer\n * @param options - optional tweaks to the verification process. These are forwarded to did-jwt.\n */\nexport async function verifyCredential(\n  vc: JWT,\n  resolver: Resolvable,\n  options: VerifyCredentialOptions = {}\n): Promise<VerifiedCredential> {\n  const nbf = options?.policies?.issuanceDate === false ? false : undefined\n  const exp = options?.policies?.expirationDate === false ? false : undefined\n  options = { ...options, policies: { ...options?.policies, nbf, exp, iat: nbf } }\n  const verified: Partial<VerifiedCredential> = await verifyJWT(vc, { resolver, ...options })\n  verified.verifiableCredential = normalizeCredential(verified.jwt as string, options?.removeOriginalFields)\n  if (options?.policies?.format !== false) {\n    validateCredentialPayload(verified.verifiableCredential)\n  }\n  return verified as VerifiedCredential\n}\n\n/**\n * Verifies that the given JwtPresentationPayload contains the appropriate options from VerifyPresentationOptions\n *\n * @param payload - the JwtPresentationPayload to verify against\n * @param options - the VerifyPresentationOptions that contain the optional values to verify.\n * @throws {Error} If VerifyPresentationOptions are not satisfied\n */\nexport function verifyPresentationPayloadOptions(\n  payload: JwtPresentationPayload,\n  options: VerifyPresentationOptions\n): void {\n  if (options.challenge && options.challenge !== payload.nonce) {\n    throw new Error(\n      `${VC_ERROR.AUTH_ERROR}: Presentation does not contain the mandatory challenge (JWT: nonce) for : ${options.challenge}`\n    )\n  }\n\n  if (options.domain) {\n    // aud might be an array\n    let matchedAudience\n    if (payload.aud) {\n      const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud]\n      matchedAudience = audArray.find((item) => options.domain === item)\n    }\n\n    if (typeof matchedAudience === 'undefined') {\n      throw new Error(\n        `${VC_ERROR.AUTH_ERROR}: Presentation does not contain the mandatory domain (JWT: aud) for : ${options.domain}`\n      )\n    }\n  }\n}\n\n/**\n * Verifies and validates a VerifiablePresentation that is encoded as a JWT according to the W3C spec.\n *\n * @return a `Promise` that resolves to a `VerifiedPresentation` or rejects with `TypeError` if the input is\n * not W3C compliant or the VerifyPresentationOptions are not satisfied.\n * @param presentation - the presentation to be verified. Currently only the JWT encoding is supported by this library\n * @param resolver - a configured `Resolver` or an implementation of `Resolvable` that can provide the DID document of\n *   the JWT issuer (presentation holder)\n * @param options - optional verification options that need to be satisfied. These are also forwarded to did-jwt.\n */\nexport async function verifyPresentation(\n  presentation: JWT,\n  resolver: Resolvable,\n  options: VerifyPresentationOptions = {}\n): Promise<VerifiedPresentation> {\n  const nbf = options?.policies?.issuanceDate === false ? false : undefined\n  const exp = options?.policies?.expirationDate === false ? false : undefined\n  options = { audience: options.domain, ...options, policies: { ...options?.policies, nbf, exp, iat: nbf } }\n  const verified: Partial<VerifiedPresentation> = await verifyJWT(presentation, {\n    resolver,\n    ...options,\n  })\n  verifyPresentationPayloadOptions(verified.payload as JwtPresentationPayload, options)\n  verified.verifiablePresentation = normalizePresentation(verified.jwt as string, options?.removeOriginalFields)\n  if (options?.policies?.format !== false) {\n    validatePresentationPayload(verified.verifiablePresentation)\n  }\n  return verified as VerifiedPresentation\n}\n"],"names":["JWT_ALG","JWT_FORMAT","DEFAULT_CONTEXT","DEFAULT_VC_TYPE","DEFAULT_VP_TYPE","DEFAULT_JWT_PROOF_TYPE","additionalPropNames","asArray","arg","Array","isArray","deepCopy","source","map","item","Date","getTime","Object","getOwnPropertyNames","reduce","o","prop","defineProperty","getOwnPropertyDescriptor","create","getPrototypeOf","notEmpty","value","undefined","cleanUndefined","input","obj","keys","forEach","key","isLegacyAttestationFormat","payload","sub","iss","claim","iat","attestationToVcFormat","nbf","vc","rest","result","type","credentialSubject","issVc","normalizeJwtCredentialPayload","removeOriginalFields","id","issuer","jti","types","filter","Set","contextArray","context","issuanceDate","toISOString","expirationDate","exp","length","normalizeJwtCredential","decoded","decodeJWT","e","TypeError","proof","jwt","normalizeCredential","test","parsed","JSON","parse","transformCredentialInput","Error","contextEntries","indexOf","converted","isNaN","Math","floor","normalizeJwtPresentationPayload","verifiableCredential","vp","cred","holder","aud","verifier","contexts","normalizeJwtPresentation","normalizePresentation","transformPresentationInput","credential","audience","VC_ERROR","SCHEMA_ERROR","FORMAT_ERROR","AUTH_ERROR","VC_JWT_ERROR","JWT_ERROR","isDateObject","prototype","toString","call","validateJwtFormat","match","validateTimestamp","Number","isInteger","valueOf","validateContext","validateVcType","validateVpType","validateCredentialSubject","verifyPresentation","presentation","resolver","options","policies","domain","verifyJWT","verified","verifyPresentationPayloadOptions","verifiablePresentation","format","validatePresentationPayload","verifyCredential","validateCredentialPayload","createVerifiablePresentationJwt","parsedPayload","challenge","nonce","validateJwtPresentationPayload","createJWT","did","signer","header","alg","createVerifiableCredentialJwt","validateJwtCredentialPayload","issuers","push","createMultisignatureJWT","validators","matchedAudience","audArray","find"],"mappings":"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"}